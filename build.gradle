buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

compileJava {
    options.compilerArgs << "-s"
    options.compilerArgs << "$projectDir/src/main/generated-sources"

    doFirst {
        // make sure that directory exists
        file(new File(projectDir, "src/main/generated-sources")).mkdirs()
    }
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated-sources']
        }
    }
    generatedTest {
        java {
            srcDirs = ['src/test/generated-test-sources']
        }
    }
}

clean.doLast {
    // clean-up directory when necessary
    file(new File(projectDir, "src/main/generated-sources")).deleteDir()
}

idea {
    module {
        sourceDirs += file('src/main/generated-sources')
    }
}

jar {
	baseName = 'crudspring'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

apply from: 'querydsl.gradle'
apply from: 'dependencies.gradle'
apply from: 'quality.gradle'

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
